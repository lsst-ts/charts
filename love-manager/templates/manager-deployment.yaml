apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: {{ .Values.replicas | default 1 }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagepullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.ports.container }}
        command: [ "/bin/bash", "-c" ]
        args:
          - cp -R /usr/src/love/manager/ /usr/src/love/manager-volume/love-manager;
            /usr/src/love/manager-volume/love-manager/runserver.sh;
        volumeMounts:
          - mountPath: /usr/src/love/manager/config # mount love.json
            name: love-conf
        {{- if .Values.pvcMountpoint }}
        {{- range $values := .Values.pvcMountpoint }}
          - mountPath: {{ $values.path }}
            name: {{ $values.name }}
        {{- end }}
        {{- end }}
        env:
        {{- $data := dict "env" .Values.env .Values.redis.env }}
        {{- include "helpers.envFromList" $data | indent 10 }}
      volumes:
        - name: love-conf
          configMap:
            name: love-conf
            items:
              - key: love.json
                path: love.json
      {{- if .Values.pvcMountpoint }}
      {{- range $values := .Values.pvcMountpoint }}
        - name: {{ $values.name }}
          persistentVolumeClaim:
            claimName: {{ $values.name }}-pvc
      {{- end }}
      {{- end }}
