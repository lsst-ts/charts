# -- The overall namespace for the application
namespace: love
# -- The site-specific path to find Vault secrets
secret_path: lsst.local
image:
  # -- The LOVE manager image to use
  repository: lsstts/love-manager
  # -- The tag to use for the LOVE manager image
  tag: develop
  # -- The pull policy on the LOVE manager image
  pullPolicy: IfNotPresent
  # -- The tag name for the Nexus3 Docker repository secrets if private images need to be pulled
  nexus3: ""
ports:
  # -- The port on the container for normal communications
  container: 8000
  # -- The port on the node for normal communcations
  node: 30000
# -- The top-level secret key name that houses the rest of the secrets
envSecretKeyName: love
env:
  # -- The site tag where LOVE is being run
  LOVE_SITE: local
  # -- The external URL from the NGINX server for LOVE
  SERVER_URL: love.lsst.local
  # -- The URL path for the LOVE producer websocket host
  LOVE_PRODUCER_WEBSOCKET_HOST: love-service/manager/ws/subscription
  # -- Label for the LOVE commander service.
  # Must match the one spcified in the LOVE commander chart
  COMMANDER_HOSTNAME: love-commander-service
  # -- Port number for the LOVE commander service.
  # Must match the one spcified in the LOVE commander chart
  COMMANDER_PORT: 5000
  # -- The type of database engine being used for the LOVE manager
  DB_ENGINE: postgresql
  # -- The name of the database being used for the LOVE manager.
  # Must match `database.env.POSTGRES_DB`
  DB_NAME: postgres
  # -- The database user needed for access from the LOVE manager.
  # Must match `database.env.POSTGRES_USER`
  DB_USER: postgres
  # -- The name of the database service
  DB_HOST: love-manager-database-service
  # -- The port for the database
  # Must match `database.port`
  DB_PORT: 5432
  # -- The name of the redis service
  REDIS_HOST: love-manager-redis-service
envSecrets:
  # -- The LOVE manager secret secret key name
  SECRET_KEY: manager-secret-key
  # -- The LOVE manager process connection password secret key name
  PROCESS_CONNECTION_PASS: manager-process-connection-password
  # -- The LOVE manager admin user password secret key name
  ADMIN_USER_PASS: manager-admin-user-password
  # -- The LOVE manager user user password secret key name
  USER_USER_PASS: manager-user-user-password
  # -- The LOVE manager cmd_user user password secret key name
  CMD_USER_PASS: manager-cmd-user-password
  # -- The database password secret key name.
  # Must match `database.envSecrets.POSTGRES_PASSWORD`
  DB_PASS: database-password
  # -- The redis password secret key name.
  # Must match `redis.envSecrets.REDIS_PASS`
  REDIS_PASS: redis-password
# -- The container path to mount the LOVE manager configuration
configMount: /usr/src/love/manager/config
# -- The specification of the LOVE manager configuration (JSON)
config: |
    {
      "alarms": {
        "minSeveritySound": "serious",
        "minSeverityNotification": "warning"
      },
      "camFeeds": {
        "generic": "/gencam",
        "allSky": "/gencam"
      }
    }
# -- Set the default number of LOVE manager pod replicas
replicas: 1
autoscaling:
  # -- Whether automatic horizontal scaling is active
  enabled: true
  # -- The allowed minimum number of replicas
  minReplicas: 1
  # -- The allowed maximum number of replicas
  maxReplicas: 100
  # -- The percentage of CPU utilization that will trigger the scaling
  targetCPUUtilizationPercentage: 80
  # -- (int) The percentage of memory utilization that will trigger the scaling
  targetMemoryUtilizationPercentage: ""
# -- Resource specifications for the LOVE manager pods
resources: {}
# -- Node selection rules for the LOVE manager pods
nodeSelector: {}
# -- Toleration specifications for the LOVE manager pods
tolerations: []
# -- Affinity rules for the LOVE manager pods
affinity: {}
# -- Configuration for the LOVE manager pods readiness probe
readinessProbe: {}
database:
  image:
    # -- The database image to use
    repository: postgres
    # -- The tag to use for the database image
    tag: "12.0"
    # -- The pull policy for the database image
    pullPolicy: IfNotPresent
  # -- The database port number
  port: 5432
  storage:
    # -- Label for the database storage point
    name: love-manager-database
    # -- Path within the running container
    path: /var/lib/postgresql/data
    # -- The storage class to request the disk allocation from
    storageClass: local-store
    # -- The access mode for the database storage
    accessMode: ReadWriteMany
    # -- The size of the database storage request
    claimSize: 2Gi
  # -- Resource specifications for the LOVE database pods
  resources: {}
  # -- Node selection rules for the LOVE database pods
  nodeSelector: {}
  # -- Toleration specifications for the LOVE database pods
  tolerations: []
  # -- Affinity rules for the LOVE database pods
  affinity: {}
  env:
    # -- Define the database type
    POSTGRES_DB: postgres
    # -- Define the database user
    POSTGRES_USER: postgres
  envSecrets:
    # -- The database password secret key name
    POSTGRES_PASSWORD: database-password
redis:
  image:
    # -- The redis image to use
    repository: redis
    # -- The tag to use for the redis image
    tag: 5.0.3
    # -- The pull policy for the redis image
    pullPolicy: IfNotPresent
  envSecrets:
    # -- The redis password secret key name
    REDIS_PASS: redis-password
  # -- The redis port number
  port: 6379
  # -- Resource specifications for the LOVE redis pods
  resources: {}
  # -- Node selection rules for the LOVE redis pods
  nodeSelector: {}
  # -- Toleration specifications for the LOVE redis pods
  tolerations: []
  # -- Affinity rules for the LOVE redis pods
  affinity: {}
viewBackup:
  # -- Whether view backup is active
  enabled: false
  image:
    # -- The view backup image to use
    repository: lsstts/love-view-backup
    # -- The tag to use for the view backup image
    tag: develop
    # -- The pull policy to use for the view backup image
    pullPolicy: IfNotPresent
    # -- The tag name for the Nexus3 Docker repository secrets if private images need to be pulled
    nexus3: ""
  # -- Place to specify additional environment variables for the view backup job
  env: {}
  # -- The view backup job schedule in cron format
  schedule: "0 0 1 1 *"
  # -- The restart policy type for the view backup cronjob
  restartPolicy: Never
  # -- Time after view backup job finishes before deletion (ALPHA)
  ttlSecondsAfterFinished: ""
  # -- Resource specifications for the LOVE view backup pods
  resources: {}
  # -- Node selection rules for the LOVE view backup pods
  nodeSelector: {}
  # -- Toleration specifications for the LOVE view backup pods
  tolerations: []
  # -- Affinity rules for the LOVE view backup pods
  affinity: {}
